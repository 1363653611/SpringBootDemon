<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zbcn.common.mapper.TSendMessageMapper">
  <resultMap id="BaseResultMap" type="com.zbcn.common.entity.TSendMessage">
    <!--@mbg.generated-->
    <!--@Table t_send_message-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="message_id" jdbcType="VARCHAR" property="messageId" />
    <result column="sender" jdbcType="VARCHAR" property="sender" />
    <result column="sender_id" jdbcType="VARCHAR" property="senderId" />
    <result column="receive_id" jdbcType="VARCHAR" property="receiveId" />
    <result column="message" jdbcType="LONGVARCHAR" property="message" />
    <result column="message_type" jdbcType="CHAR" property="messageType" />
    <result column="annex_id" jdbcType="VARCHAR" property="annexId" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, message_id, sender, sender_id, receive_id, message, message_type, annex_id, `status`, 
    create_time, modify_time, remarks
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from t_send_message
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from t_send_message
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.zbcn.common.entity.TSendMessage" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_send_message (message_id, sender, sender_id, 
      receive_id, message, message_type, 
      annex_id, `status`, create_time, 
      modify_time, remarks)
    values (#{messageId,jdbcType=VARCHAR}, #{sender,jdbcType=VARCHAR}, #{senderId,jdbcType=VARCHAR}, 
      #{receiveId,jdbcType=VARCHAR}, #{message,jdbcType=LONGVARCHAR}, #{messageType,jdbcType=CHAR}, 
      #{annexId,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.zbcn.common.entity.TSendMessage" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_send_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        message_id,
      </if>
      <if test="sender != null">
        sender,
      </if>
      <if test="senderId != null">
        sender_id,
      </if>
      <if test="receiveId != null">
        receive_id,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="messageType != null">
        message_type,
      </if>
      <if test="annexId != null">
        annex_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        #{messageId,jdbcType=VARCHAR},
      </if>
      <if test="sender != null">
        #{sender,jdbcType=VARCHAR},
      </if>
      <if test="senderId != null">
        #{senderId,jdbcType=VARCHAR},
      </if>
      <if test="receiveId != null">
        #{receiveId,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=LONGVARCHAR},
      </if>
      <if test="messageType != null">
        #{messageType,jdbcType=CHAR},
      </if>
      <if test="annexId != null">
        #{annexId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zbcn.common.entity.TSendMessage">
    <!--@mbg.generated-->
    update t_send_message
    <set>
      <if test="messageId != null">
        message_id = #{messageId,jdbcType=VARCHAR},
      </if>
      <if test="sender != null">
        sender = #{sender,jdbcType=VARCHAR},
      </if>
      <if test="senderId != null">
        sender_id = #{senderId,jdbcType=VARCHAR},
      </if>
      <if test="receiveId != null">
        receive_id = #{receiveId,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
      <if test="messageType != null">
        message_type = #{messageType,jdbcType=CHAR},
      </if>
      <if test="annexId != null">
        annex_id = #{annexId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zbcn.common.entity.TSendMessage">
    <!--@mbg.generated-->
    update t_send_message
    set message_id = #{messageId,jdbcType=VARCHAR},
      sender = #{sender,jdbcType=VARCHAR},
      sender_id = #{senderId,jdbcType=VARCHAR},
      receive_id = #{receiveId,jdbcType=VARCHAR},
      message = #{message,jdbcType=LONGVARCHAR},
      message_type = #{messageType,jdbcType=CHAR},
      annex_id = #{annexId,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>