<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zbcn.combootjob.schedule.dao.ScheduleMapper">
    <resultMap id="BaseResultMap" type="com.zbcn.combootjob.schedule.entity.TaskDO">
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="job_name" property="jobName" jdbcType="VARCHAR" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="cron_expression" property="cronExpression"
                jdbcType="VARCHAR" />
        <result column="job_status" property="jobStatus" jdbcType="VARCHAR" />
        <result column="job_group" property="jobGroup" jdbcType="VARCHAR" />
        <result column="create_user" property="createUser" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <sql id="Base_Column_List">
        id, job_name, description, cron_expression, job_status,
        job_group, create_user,
        create_time, update_user, update_time
    </sql>
    <select id="get" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from schedule_task
        where id = #{id,jdbcType=VARCHAR}
        order by update_time
    </select>
    <select id="list" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from schedule_task
        order by create_time asc
    </select>
    <select id="listTaskVoByDesc" parameterType="com.zbcn.combootjob.schedule.entity.query.TaskQuery" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from schedule_task
        <where>
            <if test="description != null and description != ''">
                and description like CONCAT(CONCAT('%', #{description,jdbcType=VARCHAR}), '%')
            </if>
            <if test="jobName != null and jobName != ''">
                and job_name like CONCAT(CONCAT('%', #{jobName,jdbcType=VARCHAR}), '%')
            </if>
            <if test="jobGroup != null and jobGroup != ''">
                and job_group like CONCAT(CONCAT('%', #{jobGroup,jdbcType=VARCHAR}), '%')
            </if>
        </where>
        order by id asc
    </select>

    <insert id="save" parameterType="com.zbcn.combootjob.schedule.entity.TaskDO">
        insert into schedule_task (id, job_name, description,
        cron_expression, job_status,
        job_group, create_user, create_time,
        update_user, update_time)
        values (#{id,jdbcType=VARCHAR}, #{jobName,jdbcType=VARCHAR},
        #{description,jdbcType=VARCHAR},
        #{cronExpression,jdbcType=VARCHAR}, #{jobStatus,jdbcType=VARCHAR},
        #{jobGroup,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP},
        #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <update id="update" parameterType="com.zbcn.combootjob.schedule.entity.TaskDO">
        update schedule_task
        <set>
            <if test="jobName != null">
                job_name = #{jobName,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="cronExpression != null">
                cron_expression = #{cronExpression,jdbcType=VARCHAR},
            </if>
            <if test="jobStatus != null">
                job_status = #{jobStatus,jdbcType=VARCHAR},
            </if>
            <if test="jobGroup != null">
                job_group = #{jobGroup,jdbcType=VARCHAR},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <delete id="remove">
        delete from schedule_task where id = #{id,jdbcType= VARCHAR}
    </delete>

    <delete id="removeBatch">
        delete from schedule_task where id in
        <foreach item="id" collection="array" open="(" separator=","
                 close=")">
            #{id}
        </foreach>
    </delete>

</mapper>